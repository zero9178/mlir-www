<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on MLIR</title><link>https://mlir.llvm.org/docs/Tools/</link><description>Recent content in Tools on MLIR</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 29 Nov 2019 15:26:15 +0000</lastBuildDate><atom:link href="https://mlir.llvm.org/docs/Tools/index.xml" rel="self" type="application/rss+xml"/><item><title>MLIR : Language Server Protocol</title><link>https://mlir.llvm.org/docs/Tools/MLIRLSP/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://mlir.llvm.org/docs/Tools/MLIRLSP/</guid><description>MLIR LSP Language Server : mlir-lsp-server Supporting custom dialects and passes Features Design Editor Plugins Visual Studio Code This document describes the tools and utilities related to supporting LSP IDE language extensions for the MLIR textual assembly format. An LSP language extension is generally comprised of two components; a language client and a language server. A language client is a piece of code that interacts with the IDE that you are using, such as VSCode.</description></item><item><title>MLIR Reduce</title><link>https://mlir.llvm.org/docs/Tools/mlir-reduce/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://mlir.llvm.org/docs/Tools/mlir-reduce/</guid><description>How to Use it Write the script for testing interestingness Available reduction strategies Operation elimination Rewrite patterns into simpler forms Reduce with built-in optimization passes Build a custom mlir-reduce Future works An MLIR input may trigger bugs after series of transformations. To root cause the problem or help verification after fixes, developers want to be able to reduce the size of a reproducer for a bug.</description></item></channel></rss>